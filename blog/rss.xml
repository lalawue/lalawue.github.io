<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet href="../styles/rss_style.css" type="text/css"?>
<rss version="2.0"
     xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
     xmlns:dc="http://purl.org/dc/elements/1.1/"
     xmlns:admin="http://webns.net/mvcb/"
     >
  <channel>
    <title>Sucha's Blog</title>
    <link>http://suchang.net/blog/index.html</link>
    <description>linux, emacs, programming, live and essay</description>
    <pubDate>Fri, 11 Aug 2017 02:12:49 +0800</pubDate>
    <generator>emacs-wiki-journal</generator>
    <language>zh-CN</language>
    <dc:creator>suchaaa@gmail.com (sucha)</dc:creator>

    <item>
      <title>本站换域名了</title>
      <guid>http://suchang.org/blog/2017-08.html#p1</guid>
      <pubDate>2017-08-11T02:09:22+0800</pubDate>
      <dc:creator>sucha</dc:creator>
      <category>CategoryThisSite</category>
      <description><![CDATA[<p>
换成 <a href="http://suchang.org">http://suchang.org</a> 了，域名商还是原来那个，查到 github 只能绑定一个
domain 吧，于是换了，这样旧的 <a href="http://suchang.net">http://suchang.net</a> 就无法访问了。

</p>

<p>
前几天 gmail 收到一些域名降价邮件，随手查了一下，马上把这个域名给捞了。
记得之前在大学时，好想抢这个，可惜抢不到，现在是没人要了。

</p>

<p>
此一时彼一时。

</p>

]]></description>
    </item>

    <item>
      <title>m_kcptun</title>
      <guid>http://suchang.org/blog/2017-08.html#p0</guid>
      <pubDate>2017-08-06T13:34:04+0800</pubDate>
      <dc:creator>sucha</dc:creator>
      <category>CategoryProgramming</category>
      <description><![CDATA[<p>
之前的 <a href="https://github.com/lalawue/m_tunnel">m_tunnel</a> 因为基于 TCP，实际环境单独使用其实不尽如人意，因为 TCP
本身重发机制等等原因，在网络环境比较糟糕的情况下，延迟长得让人难以接受。

</p>

<p>
早期的改进，诸如在手机、PC 端的动作游戏，IM 上，是使用改进的 UDP，封装自
己的协议，以及重发机制管理，来达到速度、带宽的平衡。

</p>

<p>
比较有名的是 <a href="https://github.com/skywind3000/kcp">kcp</a>，包含完整协议，意图取代 TCP，野心更大的则是 Google 的
<a href="https://www.chromium.org/quic">QUIC</a> 协议，还包含完整的安全性的考虑。

</p>

<p>
上面也说到，其实很早之前大家就都有基于 UDP 的各自的方案，大家对 TCP 的局
限也都比较清楚，所以类似 QUIC 这样的协议，感觉铺开会很快的。

</p>

<p>
实际上，我自己使用 m_tunnel 是使用 <a href="https://github.com/xtaci/kcptun">kcptun</a>，要不实际环境跑起来太慢了，再
说自己也想研究一下 kcp 的使用，于是构建了这个
<a href="https://github.com/lalawue/m_kcptun">https://github.com/lalawue/m_kcptun</a> 。

</p>

<p>
目前仅能完成基础的工作，离具体实用还有一段距离，因为实际上虽然基于 kcp，
上层还是需要自己的协议，来模拟这端 TCP 与远端 TCP 是否还连上这个问题，起
码能保证当本地 TCP 重连的时候，远端 TCP 也来一个断开重连，要不然，跑在
TCP 上面的协议会乱的。

</p>

]]></description>
    </item>

  </channel>
</rss>
